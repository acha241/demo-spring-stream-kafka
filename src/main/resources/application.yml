info:
  component: Demo Kafka Service

server:
  port: ${PORT:8080}

spring:
  cloud:
    stream:
#      kafka:
#        binder:
#          brokers: ${KAFKA_BROKERS:localhost}
      bindings:
        input:
          destination: demo.topic
          content-type: application/text
          group: demoConsumer
          binder: kafka1
        output:
          destination: demo.topic
          binder: kafka1
        customInput:
          destination: demo.custom.topic
          content-type: application/text
          group: demoCustomConsumer
          binder: kafka1
        customOutput:
          destination: demo.custom.topic
          binder: kafka1
        customInput2:
          destination: demo.custom2.topic
          content-type: application/text
          group: demoCustom2Consumer
          binder: kafka1
        customOutput2:
          destination: demo.custom2.topic
          binder: kafka1
      binders:
        kafka1:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      brokers: ${KAFKA_BROKERS:localhost}
#       this allows multiple bindings to more that one cluster group
#        kafka2:
#          type: kafka
#          environment:
#            spring:
#              cloud:
#                stream:
#                  kafka:
#                    binder:
#                      brokers: ${KAFKA2_BROKERS:localhost}
  kafka:
    admin:
      fail-fast: true
      properties:
        request.timeout.ms: 10000  # time to wait for broker to connect if your see this error [AdminClient] Broker may not be available
        retries: 0  # how many times to retry

    listener:
      poll-timeout: 1000

#Setting logging levels
logging:
  level:
    com.netflix: WARN
    org.springframework.web: WARN
    com.softvision: DEBUG

